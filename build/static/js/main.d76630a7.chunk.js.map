{"version":3,"sources":["components/Home.js","components/Form.js","components/Chart.js","App.js","serviceWorker.js","index.js"],"names":["Home","_ref","dTDate","dTValue","loadingDT","react_default","a","createElement","className","concat","moment","locale","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputDate","e","_e$target","target","value","name","setState","defineProperty","handleValidSubmit","result","_this$state","state","fechaIni","fechaEnd","document","querySelector","classList","contains","style","display","innerHTML","add","handleSubmit","preventDefault","_this$state2","props","onSubmit","type","onChange","placeholder","max","format","id","Component","Chart","valores","dValues","suma","forEach","item","min","Math","apply","promedio","length","loadingChart","es","data","chartData","options","title","displayTitle","text","toFixed","fontSize","legend","displayLegend","position","legendPosition","PureComponent","defaultProps","location","baseApi","apiKey","App","parseUrl","dateMomentStart","yearIni","monthIni","dayIni","dateMomentEnd","yearEnd","monthEnd","dayEnd","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dates","url","response","wrap","_context","prev","next","fetchDolarsByDate","sent","Dolares","buildDataSet","stop","_x","arguments","dolars","labels","color","count","_ref3","Valor","Fecha","push","parseFloat","replace","datasets","backgroundColor","borderColor","pointBackgroundColor","objectSpread","_ref4","_callee2","body","_context2","fetch","status","json","abrupt","CodigoError","_x2","fetchDolarToday","_callee3","dateMomentToday","res","_dolars$","_context3","undefined","components_Home","components_Form","components_Chart","Boolean","window","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d76630a7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Home=({dTDate, dTValue, loadingDT})=>{\r\n  return(\r\n      <h2 className='text-center'>{!loadingDT?`Dolar hoy ${dTDate} / $ ${dTValue}`:'cargando...'}</h2> \r\n  )\r\n}\r\n\r\nexport default Home; ","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport 'moment-timezone';\r\n\r\nmoment.locale('es-ES');\r\n\r\nclass Form extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            fechaIni:'',\r\n            fechaEnd:''\r\n        }\r\n    }\r\n    \r\n    handleInputDate=(e)=>{\r\n        const {value, name}= e.target;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    handleValidSubmit=()=>{\r\n        let result= true;\r\n        const {fechaIni,fechaEnd} = this.state;\r\n       \r\n        if (fechaIni) {\r\n            if (document.querySelector('#erroIni').classList.contains('fagError')) {\r\n                document.querySelector('#erroIni').style.display='none';\r\n                result= true;\r\n            }\r\n        }\r\n        else{\r\n            document.querySelector('#erroIni').innerHTML='Debe ingresar una fecha de inicio';\r\n            document.querySelector('#erroIni').style.display='block';\r\n            document.querySelector('#erroIni').classList.add('fagError');\r\n            result= false;\r\n        } \r\n        \r\n        if (fechaEnd) {\r\n            if (document.querySelector('#erroEnd').classList.contains('fagError')) {\r\n                document.querySelector('#erroEnd').style.display='none';\r\n                result= true;\r\n            }    \r\n        } \r\n        else{\r\n            document.querySelector('#erroEnd').innerHTML='Debe ingresar una fecha de Fin';\r\n            document.querySelector('#erroEnd').style.display='block';\r\n            document.querySelector('#erroEnd').classList.add('fagError');\r\n            result= false;\r\n        }             \r\n        return result;  \r\n    }\r\n\r\n    \r\n    handleSubmit=(e)=>{\r\n        \r\n        e.preventDefault();\r\n        if (this.handleValidSubmit()) {\r\n            const {fechaIni,fechaEnd} = this.state;\r\n            this.props.handleSubmit({\r\n                fechaIni,fechaEnd\r\n            })\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n        <div className=\"card\">\r\n            <div className='card-header text-center'>\r\n                <h4>Consulta en valor del dolar en un rango de fechas segun la SBIF</h4>\r\n            </div>\r\n            <form onSubmit={this.handleSubmit} className=\"card-body\">\r\n                <div className='row'>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label>Fecha de inicio</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            name=\"fechaIni\"\r\n                            className=\"form-control\"\r\n                            onChange={this.handleInputDate}\r\n                            placeholder=\"Fecha Inicio\"\r\n                            max={moment().format('YYYY-MM-DD')}\r\n                            />\r\n                        <label id='erroIni' className='error'>Errorrrr</label>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label>Fecha de fin</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            name=\"fechaEnd\"\r\n                            className=\"form-control\"\r\n                            onChange={this.handleInputDate}\r\n                            placeholder=\"Responsible\"\r\n                            max={moment().format('YYYY-MM-DD')}\r\n                            />\r\n                        <label id='erroEnd' className='error'></label>\r\n                    </div>\r\n                </div>\r\n                <div className='text-center card-footer'>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Consultar</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {PureComponent} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nclass Chart extends PureComponent{\r\n\r\n  static defaultProps = {\r\n    displayTitle:true,\r\n    displayLegend: false,\r\n    legendPosition:'right',\r\n    location:'City'\r\n  }\r\n\r\n  render(){\r\n    const valores=this.props.dValues;\r\n    let suma=0;\r\n    valores.forEach(item => {\r\n      suma+= item\r\n    });\r\n    var min=Math.min.apply(null, valores);\r\n    var max=Math.max.apply(null, valores);\r\n    \r\n    const promedio= suma/valores.length;\r\n    \r\n    if (this.props.loadingChart) {\r\n      return (\r\n        <div className=\"chart\">\r\n          <Line\r\n            data={this.props.chartData}\r\n            options={{\r\n              title:{\r\n                display:this.props.displayTitle,\r\n                text:`Monto mayor: $${max}  Monto menor: $${min}  Promedio: $${promedio.toFixed(2)}`,\r\n                fontSize:18\r\n              },\r\n              legend:{\r\n                display:this.props.displayLegend,\r\n                position:this.props.legendPosition\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      return(<h3>Cargando Gráfica...</h3>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport './App.css';\n\nimport Home from './components/Home';\nimport Form from './components/Form';\nimport Chart from './components/Chart';\n\n\nmoment.locale('es-ES');\nconst baseApi='https://api.sbif.cl/api-sbifv3/recursos_api/dolar';\nconst apiKey='?apikey=9c84db4d447c80c74961a72245371245cb7ac15f&formato=json';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      chartData:[],\n      count:0,\n      dTDate:'',\n      dTValue:'',\n      loadingDT:false,\n      loadingChart:false,\n      dValues:[]\n    }\n  }\n  componentDidMount(){\n    this.fetchDolarToday();\n  }\n\n  parseUrl=({fechaIni, fechaEnd})=>{\n    const dateMomentStart= moment(fechaIni, 'YYYY-MM-DD');\n    const yearIni= dateMomentStart.format('YYYY');\n    const monthIni= dateMomentStart.format('MM');\n    const dayIni= dateMomentStart.format('DD');\n\n    const dateMomentEnd= moment(fechaEnd, 'YYYY-MM-DD');\n    const yearEnd= dateMomentEnd.format('YYYY');\n    const monthEnd= dateMomentEnd.format('MM');\n    const dayEnd= dateMomentEnd.format('DD');\n\n    const url= `${baseApi}/periodo/${yearIni}/${monthIni}/dias_i/${dayIni}/${yearEnd}/${monthEnd}/dias_f/${dayEnd}/${apiKey}`;\n\n    return url\n  }\n\n  handleSubmit = async (dates) =>{\n    const url = this.parseUrl(dates);\n    const response = await this.fetchDolarsByDate(url); \n    \n    if (response.Dolares) {\n      this.buildDataSet(response.Dolares);\n    }\n  }\n\n  buildDataSet=(dolars)=>{\n    const labels = [];\n    const data = [];\n    const color = [];\n    const count = dolars.length;\n\n    dolars.forEach(({Valor, Fecha})=>{\n      labels.push(Fecha);\n      data.push(parseFloat(Valor.replace(',', '.')));\n      color.push('blue');\n    })\n    \n    const chartData = {\n      labels,\n      datasets:[{data,\n        backgroundColor:['rgba(255, 99, 132, 0.6)'],\n        borderColor: ['rgba(255, 99, 132, 1)'],\n        pointBackgroundColor: color\n      }],\n    };\n    this.setState(state=>({...state,...{chartData, count, loadingChart:true, dValues:data}}));\n  }\n\n  fetchDolarsByDate = async (url) => {\n    const response = await fetch(url);\n    if(response && response.status === 200){\n      \n      const body= await response.json();\n      return body;\n    }else if(response.CodigoError){\n      return false;\n    }\n    return false;\n  }\n  fetchDolarToday=async()=>{\n    this.setState(state=>({...state,...{loadingDT:true}}));\n\n    const dateMomentToday= moment();\n    const yearIni= dateMomentToday.format('YYYY');\n    const monthIni= dateMomentToday.format('MM');\n    const dayIni= dateMomentToday.format('DD');\n\n    const res= await fetch(`${baseApi}/${yearIni}/${monthIni}/dias/${dayIni}/${apiKey}`)\n    const data= await res.json();\n    const dolars=data.Dolares;\n\n    if (dolars!== undefined) {\n      const {Fecha, Valor} = dolars[0];\n      const dTDate = moment(Fecha,'YYYY-MM-DD').format('DD-MM-YYYY')\n      const dTValue = parseFloat(Valor.replace(',', '.'));\n      this.setState(state=>({...state,...{dTDate, dTValue,loadingDT:false}}));       \n    } \n    else{\n      this.setState(state=>({...state,...{loadingDT:false}}));       \n\n    }\n  }\n\n\n  render() {\n    const {count, chartData, dTDate, dTValue, loadingDT, loadingChart, dValues} = this.state;\n    return (\n      <div className='container p-4 '>\n        <h1>{this.props.title}</h1>\n        <Home loadingDT={loadingDT} dTDate={dTDate} dTValue={dTValue}/>\n        <Form handleSubmit={this.handleSubmit}/>\n        {count > 0 && <Chart chartData={chartData} dValues={dValues} loadingChart={loadingChart}/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App title='hola mundo' data={data}/>, document.getElementById('root'));\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}